print("HSH SCRIPT EXECUTED ...")
getgenv().Timer = 0.285
getgenv().Speed = 1.25
getgenv().Distance = 1
getgenv().ShootingSpeed = 0.3
local type = "Reg"
local playerl = {}
local hoops = {}
local playc = {}
local aimp = workspace.Hoops:GetChildren()[1].AimPart
task.spawn(function()
while true do task.wait()
for i,v in workspace.Hoops:GetChildren() do
if game.Players.LocalPlayer:DistanceFromCharacter(v.AimPart.Position) <= 80 then
aimp = v.AimPart
            end
         end
     end
end)
local Track = Instance.new("Animation",game.Players.LocalPlayer.Character)
Track.AnimationId = "rbxassetid://15376687911"
local Guard = game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Animator:LoadAnimation(Track)
Guard.Priority = Enum.AnimationPriority.Action2
local TrackR = Instance.new("Animation",game.Players.LocalPlayer.Character)
TrackR.AnimationId = "rbxassetid://15376685605"
local GuardR = game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Animator:LoadAnimation(TrackR)
GuardR.Priority = Enum.AnimationPriority.Action2
local TrackL = Instance.new("Animation",game.Players.LocalPlayer.Character)
TrackL.AnimationId = "rbxassetid://15376683616"
local GuardL = game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Animator:LoadAnimation(TrackL)
GuardL.Priority = Enum.AnimationPriority.Action2
task.spawn(function()
while true do task.wait()
for i,v in pairs(game.Players:GetPlayers()) do
if v ~= game.Players.LocalPlayer and v.Character and not table.find(playc, v.Character) then
table.insert(playc,v.Character)
local b = Instance.new("Part", v.Character)
b.Size = Vector3.new(0, 0, 0)
b.Name = "Contesting"
b.Anchored = true
b.CanCollide = false
task.spawn(function()
while task.wait() do
if b and v.Character and game.Players.LocalPlayer.Character then
b.CFrame = CFrame.lookAt(v.Character:WaitForChild("HumanoidRootPart",9e9).Position, aimp.Position)
  end
 end
end)
      end
    end
  end
end)
task.spawn(function()
while true do task.wait()
for i,v in pairs(game.Players:GetPlayers()) do
if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Backpack.CurrentBall.Value ~= nil and getgenv().Guarding == true and game.Players.LocalPlayer:DistanceFromCharacter(v.Character:WaitForChild("HumanoidRootPart",9e9).Position) <= 25 then
if v.Character.Humanoid.MoveDirection.Magnitude == 0 or v.Character.Humanoid.MoveDirection.Z < 0 then
getgenv().Distance = 4
elseif v.Character.Humanoid.MoveDirection.Z > 0 then
getgenv().Distance = 6.5
end
    if (v.Character.Humanoid.MoveDirection.Magnitude == 0 or math.round(v.Character.Humanoid.MoveDirection.Z) == -1 or math.round(v.Character.Humanoid.MoveDirection.Z) == 1) and math.round(v.Character.Humanoid.MoveDirection.X) ~= 1 and math.round(v.Character.Humanoid.MoveDirection.X) ~= -1 and not Guard.IsPlaying then
        if GuardR.IsPlaying then
        GuardR:Stop()
        elseif GuardL.IsPlaying then
        GuardL:Stop()
        end
Guard:Play()
    elseif math.round(v.Character.Humanoid.MoveDirection.X) == 1 and not GuardR.IsPlaying then
        if GuardL.IsPlaying then
        GuardL:Stop()
        elseif Guard.IsPlaying then
        Guard:Stop()
        end
GuardR:Play()
    elseif math.round(v.Character.Humanoid.MoveDirection.X) == -1 and not GuardL.IsPlaying then
        if GuardR.IsPlaying then
        GuardR:Stop()
        elseif Guard.IsPlaying then
        Guard:Stop()
        end
GuardL:Play()
    end

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.lookAt(game.Players.LocalPlayer.Character.HumanoidRootPart.Position,v.Character.Contesting.Position)
game.Players.LocalPlayer.Character:WaitForChild("Humanoid",9e9).WalkToPoint = (v.Character.Contesting.Position + (v.Character.Contesting.CFrame.lookVector * getgenv().Distance))
                   end
             end
       end
end)
game.Players.LocalPlayer.Backpack.CurrentBall.Changed:Connect(function()
if game.Players.LocalPlayer.Backpack.CurrentBall.Value ~= nil then
if Guard.IsPlaying then
Guard:Stop()
elseif GuardR.IsPlaying then
GuardR:Stop()
elseif GuardL.IsPlaying then
GuardL:Stop()
      end
   end
end)
game.Players.LocalPlayer.PlayerGui.MobileUi.Mobile.Run.Cam.MouseButton1Down:Connect(function()
local args = {
    [1] = {
        ["Action"] = "Guarding",
        ["Val"] = true
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Lib"):WaitForChild("EventsPlayer"):WaitForChild("Actions"):FireServer(unpack(args))
getgenv().Guarding = true
end)
game.Players.LocalPlayer.PlayerGui.MobileUi.Mobile.Run.Cam.MouseButton1Up:Connect(function()
if Guard.IsPlaying then
Guard:Stop()
elseif GuardR.IsPlaying then
GuardR:Stop()
elseif GuardL.IsPlaying then
GuardL:Stop()
end
local args = {
    [1] = {
        ["Action"] = "Guarding",
        ["Val"] = false
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Lib"):WaitForChild("EventsPlayer"):WaitForChild("Actions"):FireServer(unpack(args))
getgenv().Guarding = false
end)
task.spawn(function()
while task.wait(0.1) do
if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.Skills:FindFirstChild("Post Technician") then
type = "HookRight"
else
type = "Reg"
end
for i,v in game.Players:GetPlayers() do
if v ~= game.Players.LocalPlayer and v.Character and not table.find(playerl,v) then
table.insert(playerl,v)
v.Character:WaitForChild("Humanoid",9e9).Animator.AnimationPlayed:Connect(function(Anim)
if game.Players.LocalPlayer:DistanceFromCharacter(v.Character:WaitForChild("HumanoidRootPart",9e9).Position) <= 15 and (Anim.Animation.AnimationId == "rbxassetid://15347169169" or Anim.Animation.AnimationId == "rbxassetid://15347163366" or Anim.Animation.AnimationId == "rbxassetid://14162578959" or Anim.Animation.AnimationId == "rbxassetid://16112516150" or Anim.Animation.AnimationId == "rbxassetid://16112582081" or Anim.Animation.AnimationId == "rbxassetid://14037389712" or Anim.Animation.AnimationId == "rbxassetid://15977894192" or Anim.Animation.AnimationId == "rbxassetid://14271154175" or Anim.Animation.AnimationId == "rbxassetid://14270526362" or Anim.Animation.AnimationId == "rbxassetid://15230192060" or Anim.Animation.AnimationId == "rbxassetid://15230192060" or Anim.Animation.AnimationId == "rbxassetid://16154147726" or Anim.Animation.AnimationId == "rbxassetid://16153893144") then
firesignal(game.Players.LocalPlayer.PlayerGui.MobileUi.Mobile.Def.Jump["MouseButton1Down"])
local args = {
    [1] = {
        ["Action"] = "BlockStart"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Lib"):WaitForChild("EventsPlayer"):WaitForChild("Actions"):FireServer(unpack(args))
local args = {
    [1] = {
        ["Action"] = "BlockBall"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Lib"):WaitForChild("EventsPlayer"):WaitForChild("Actions"):FireServer(unpack(args))
firesignal(game.Players.LocalPlayer.PlayerGui.MobileUi.Mobile.Def.Jump["MouseButton1Up"])
   end
end)
       end
     end
   end
end)
game:GetService("RunService").RenderStepped:Connect(function()
if getgenv().CC == true then
getgenv().CC = false
task.wait(getgenv().Timer)
local args = {
    [1] = {
        ["Action"] = "StopMeter",
        ["PumpFake"] = false
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Lib"):WaitForChild("EventsPlayer"):WaitForChild("Actions"):FireServer(unpack(args))
task.wait(getgenv().ShootingSpeed)
local args = {
    [1] = {
        ["Action"] = "ShootBall",
        ["ClientTime"] = 0
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Lib"):WaitForChild("EventsPlayer"):WaitForChild("Actions"):FireServer(unpack(args))
	for _, v in game.Players.LocalPlayer.Character.Humanoid.Animator:GetPlayingAnimationTracks() do
		v:AdjustSpeed(1)
	end 
    end
end)
game:GetService("RunService").RenderStepped:Connect(function()
for i, v in game.Players.LocalPlayer.Character.Humanoid.Animator:GetPlayingAnimationTracks() do
if tostring(v):match("Moving") or tostring(v):match("DefaultIdle") or tostring(v):match("Hook") or tostring(v):match("RegBase") or tostring(v):match("LayUpBase") or tostring(v):match("PostFadeBase") or tostring(v):match("FadeBase")  then
v:AdjustSpeed(getgenv().Speed)
      end
   end
end)
local h;
h = hookmetamethod(game,'__namecall',function(self,...)
local args = {...}
if tostring(self) == "Actions" and getnamecallmethod() == "FireServer" and (args[1]["Action"] == "Shootball" or args[1]["Action"] == "StopMeter") and not checkcaller() then
return;
elseif tostring(self) == "Actions" and getnamecallmethod() == "FireServer" and args[1]["Action"] == "StartMeter" and args[1]["ShotName"] and not checkcaller() then
args[1]["ShotType"] = "SuperFast"
if args[1]["ShotName"] ~= "Dunk" then
args[1]["ShotName"] = type
getgenv().ShootingSpeed = 0.3
elseif args[1]["ShotName"] == "Dunk" then
args[1]["DunkType"] = "Stand"
getgenv().ShootingSpeed = 1.5
end
getgenv().CC = true
self.FireServer(self,unpack(args))
for i, v in game.Players.LocalPlayer.Character.Humanoid.Animator:GetPlayingAnimationTracks() do
if not tostring(v):match("Run") and not tostring(v):match("Dribble") and not tostring(v):match("BaseDunk") and not tostring(v):match("StandDunk") then
v:AdjustSpeed(getgenv().Speed)
   end
end
return self.FireServer(self,unpack(args))
elseif tostring(self) == "Actions" and getnamecallmethod() == "FireServer" and (args[1]["Action"] == "BlockStart" or args[1]["Action"] == "BlockBall") and not checkcaller() then
return;
elseif  tostring(self) == "Actions" and getnamecallmethod() == "FireServer" and args[1]["Action"] == "Guarding" and not checkcaller() then
return;
end
return h(self,...)
end)
for i,v in workspace:GetChildren() do
if v.Name == "Lights" or v.Name == "_NpcCrown" then
v:Destroy()
    end
end
	workspace:FindFirstChildOfClass('Terrain').WaterWaveSize = 0
	workspace:FindFirstChildOfClass('Terrain').WaterWaveSpeed = 0
	workspace:FindFirstChildOfClass('Terrain').WaterReflectance = 0
	workspace:FindFirstChildOfClass('Terrain').WaterTransparency = 0
	game:GetService("Lighting").GlobalShadows = false
	game:GetService("Lighting").FogEnd = 9e9
	settings().Rendering.QualityLevel = 1
	for i,v in pairs(game:GetDescendants()) do
		if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
			v.Material = "Plastic"
			v.Reflectance = 0
		elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
			v.Lifetime = NumberRange.new(0)
		elseif v:IsA("Explosion") then
			v.BlastPressure = 1
			v.BlastRadius = 1
		end
	end
	for i,v in pairs(game:GetService("Lighting"):GetDescendants()) do
		if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
			v.Enabled = false
		end
	end
	workspace.DescendantAdded:Connect(function(child)
		coroutine.wrap(function()
			if child:IsA('ForceField') then
				game:GetService('RunService').Heartbeat:Wait()
				child:Destroy()
			elseif child:IsA('Sparkles') then
				game:GetService('RunService').Heartbeat:Wait()
				child:Destroy()
			elseif child:IsA('Smoke') or child:IsA('Fire') then
				game:GetService('RunService').Heartbeat:Wait()
				child:Destroy()
			end
		end)()
  end)
