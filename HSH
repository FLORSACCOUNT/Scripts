getgenv().Timer = 0.3175
local playerl = {}
task.spawn(function()
while task.wait(0.1) do
for i,v in pairs(game.Players:GetPlayers()) do
if v ~= game.Players.LocalPlayer and not table.find(playerl,v) then
table.insert(playerl,v)
       end
     end
   end
end)
game.Players.LocalPlayer.PlayerGui.Meters.ChildAdded:Connect(function(b)
for i,v in pairs(playerl) do
if b.Name:match(v.Name) and v.Character and game.Players.LocalPlayer:DistanceFromCharacter(v.Character:WaitForChild("HumanoidRootPart",9e9).Position) <= 15 then
local args = {
    [1] = {
        ["Action"] = "BlockStart"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Lib"):WaitForChild("EventsPlayer"):WaitForChild("Actions"):FireServer(unpack(args))
local args = {
    [1] = {
        ["Action"] = "BlockBall"
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Lib"):WaitForChild("EventsPlayer"):WaitForChild("Actions"):FireServer(unpack(args))
firesignal(game.Players.LocalPlayer.PlayerGui.MobileUi.Mobile.Def.Jump["MouseButton1Down"])
firesignal(game.Players.LocalPlayer.PlayerGui.MobileUi.Mobile.Def.Jump["MouseButton1Up"])
end
end
end)
game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.Skills:FindFirstChild("Post Technician") then
getgenv().Type = "HookLeft"
else
getgenv().Type = "Reg"
end
end)
game:GetService("RunService").RenderStepped:Connect(function()
if getgenv().CanS == true then
getgenv().CanS = false
task.wait(getgenv().Timer)
local args = {
    [1] = {
        ["Action"] = "StopMeter",
        ["PumpFake"] = false
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Lib"):WaitForChild("EventsPlayer"):WaitForChild("Actions"):FireServer(unpack(args))
task.wait(0.15)
local args = {
    [1] = {
        ["Action"] = "ShootBall",
        ["ClientTime"] = 0
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Lib"):WaitForChild("EventsPlayer"):WaitForChild("Actions"):FireServer(unpack(args))
   end
end)
local h;
h = hookmetamethod(game,'__namecall',function(self,...)
local args = {...}
if tostring(self) == "Actions" and getnamecallmethod() == "FireServer" and (args[1]["Action"] == "Shootball" or args[1]["Action"] == "StopMeter") and not checkcaller() then
return;
elseif tostring(self) == "Actions" and getnamecallmethod() == "FireServer" and args[1]["Action"] == "StartMeter" and not checkcaller() then
args[1]["ShotType"] = "SuperFast"
args[1]["ShotName"] = getgenv().Type
getgenv().CanS = true
self.FireServer(self,unpack(args))
return;
elseif tostring(self) == "Actions" and getnamecallmethod() == "FireServer" and (args[1]["Action"] == "BlockStart" or args[1]["Action"] == "BlockBall") and not checkcaller() then
return;
end
return h(self,...)
end)
for i,v in pairs(workspace:GetChildren()) do
if v.Name == "Lights" or v.Name == "_NpcCrown" or v.Name == "Extra" then
v:Destroy()
    end
end
	workspace:FindFirstChildOfClass('Terrain').WaterWaveSize = 0
	workspace:FindFirstChildOfClass('Terrain').WaterWaveSpeed = 0
	workspace:FindFirstChildOfClass('Terrain').WaterReflectance = 0
	workspace:FindFirstChildOfClass('Terrain').WaterTransparency = 0
	game:GetService("Lighting").GlobalShadows = false
	game:GetService("Lighting").FogEnd = 9e9
	settings().Rendering.QualityLevel = 1
	for i,v in pairs(game:GetDescendants()) do
		if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
			v.Material = "Plastic"
			v.Reflectance = 0
		elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
			v.Lifetime = NumberRange.new(0)
		elseif v:IsA("Explosion") then
			v.BlastPressure = 1
			v.BlastRadius = 1
		end
	end
	for i,v in pairs(game:GetService("Lighting"):GetDescendants()) do
		if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
			v.Enabled = false
		end
	end
	workspace.DescendantAdded:Connect(function(child)
		coroutine.wrap(function()
			if child:IsA('ForceField') then
				game:GetService('RunService').Heartbeat:Wait()
				child:Destroy()
			elseif child:IsA('Sparkles') then
				game:GetService('RunService').Heartbeat:Wait()
				child:Destroy()
			elseif child:IsA('Smoke') or child:IsA('Fire') then
				game:GetService('RunService').Heartbeat:Wait()
				child:Destroy()
			end
		end)()
  end)
